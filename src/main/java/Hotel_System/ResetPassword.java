/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Hotel_System;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class ResetPassword extends javax.swing.JFrame {

    /**
     * Creates new form ResetPassword
     */
    public ResetPassword() {
        initComponents();
        getContentPane().setBackground(new Color(36, 183, 173));
        Login login = new Login();
        login.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newPassField = new javax.swing.JTextField();
        secQuesField = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        answerField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("Forget Password ?"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        newPassField.setBackground(new java.awt.Color(179, 255, 245));
        newPassField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newPassField.setForeground(new java.awt.Color(0, 102, 153));
        newPassField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 15), new java.awt.Color(0, 153, 255))); // NOI18N
        getContentPane().add(newPassField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 250, 50));

        secQuesField.setEditable(false);
        secQuesField.setBackground(new java.awt.Color(179, 255, 245));
        secQuesField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        secQuesField.setForeground(new java.awt.Color(0, 102, 153));
        secQuesField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Security Question", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 15), new java.awt.Color(0, 153, 255))); // NOI18N
        getContentPane().add(secQuesField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 250, 50));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(204, 0, 0));
        titleLabel.setText("Forget Password ?");
        getContentPane().add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        answerField.setBackground(new java.awt.Color(179, 255, 245));
        answerField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        answerField.setForeground(new java.awt.Color(0, 102, 153));
        answerField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Answer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 15), new java.awt.Color(0, 153, 255))); // NOI18N
        getContentPane().add(answerField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 250, 50));

        emailField.setBackground(new java.awt.Color(179, 255, 245));
        emailField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emailField.setForeground(new java.awt.Color(0, 102, 153));
        emailField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Email", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 15), new java.awt.Color(0, 153, 255))); // NOI18N
        getContentPane().add(emailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 250, 50));

        searchButton.setBackground(new java.awt.Color(0, 153, 255));
        searchButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 80, 20));

        saveButton.setBackground(new java.awt.Color(0, 153, 255));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 100, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/forgetPassBorder.jpg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String email = emailField.getText();

        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter an email.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String securityQuestion = retrieveSecurityQuestion(email);

        if (securityQuestion != null) {
            secQuesField.setText(securityQuestion);
        } else {
            JOptionPane.showMessageDialog(null, "Email not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

        private String retrieveSecurityQuestion(String email) {
        try (BufferedReader reader = new BufferedReader(new FileReader("staff.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] staffRecord = line.split(";");
                if (staffRecord.length >= 7 && email.equals(staffRecord[2])) {
                    return staffRecord[4];
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error reading staff records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return null;
    }
        
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String email = emailField.getText();
        String answer = answerField.getText();
        String newPassword = newPassField.getText();

        if (email.isEmpty() || answer.isEmpty() || newPassword.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter all fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean answerCorrect = checkAnswer(email, answer);

        if (answerCorrect) {
            if (updatePassword(email, newPassword)) {
                JOptionPane.showMessageDialog(null, "Password updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Error updating password.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Incorrect answer.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveButtonActionPerformed


    private boolean checkAnswer(String email, String answer) {
        try (BufferedReader reader = new BufferedReader(new FileReader("staff.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] staffRecord = line.split(";");
                if (staffRecord.length >= 7 && email.equals(staffRecord[2])) {
                    String storedAnswer = staffRecord[5];
                    return answer.equals(storedAnswer);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error reading staff records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }


    private boolean updatePassword(String email, String newPassword) {
    try (BufferedReader reader = new BufferedReader(new FileReader("staff.txt"))) {
        StringBuilder fileContent = new StringBuilder();
        String line;
        boolean passwordUpdated = false;
        while ((line = reader.readLine()) != null) {
            String[] staffRecord = line.split(";");
            if (staffRecord.length >= 7 && email.equals(staffRecord[2])) {
                staffRecord[3] = newPassword; // Update the password
                line = String.join(";", staffRecord); // Reconstruct the line
                passwordUpdated = true;
            }
            fileContent.append(line).append(System.lineSeparator());
        }

        if (!passwordUpdated) {
            JOptionPane.showMessageDialog(null, "Email not found.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        try (BufferedWriter writer = new BufferedWriter(new FileWriter("staff.txt"))) {
            writer.write(fileContent.toString());
        }

        return true;
    } catch (IOException e) {
        JOptionPane.showMessageDialog(null, "Error updating password: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answerField;
    private javax.swing.JLabel background;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField newPassField;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField secQuesField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
